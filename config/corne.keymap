/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W     &kp F  &kp P      &kp B      &kp J  &kp L          &kp U    &kp Y  &kp SEMICOLON  &kp BSPC
&kp LCTRL  &kp A  &kp R     &kp S  &kp T      &kp G      &kp M  &kp N          &kp E    &kp I          &kp O   &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C  &kp D      &kp V      &kp K  &kp H      &kp COMMA  &kp DOT       &kp FSLH   &kp ESC
                         &kp LALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RIGHT_GUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp C_PREVIOUS    &kp UP_ARROW       &kp C_NEXT  &kp C_PLAY_PAUSE       &bt BT_NXT    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9    &kp PLUS  &kp ASTERISK    &kp BSPC
&kp LCTRL  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW        &bt BT_CLR       &bt BT_PRV    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp MINUS     &kp SLASH  &kp DELETE
&kp LSHFT        &kp HOME         &kp END        &kp PG_UP     &kp PAGE_DOWN  &kp PRINTSCREEN    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD     &kp EQUAL     &kp INS
                                              &kp LEFT_ALT            &trans        &kp SPACE         &kp RET        &trans  &kp NUMBER_0
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT         &kp CARET  &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp BSPC
 &kp F1           &kp F2       &kp F3    &kp F4      &kp F5       &kp F6         &kp MINUS      &kp EQUAL  &kp LEFT_BRACKET     &kp RIGHT_BRACKET          &kp BACKSLASH  &kp GRAVE
 &kp F7           &kp F8       &kp F9   &kp F10     &kp F11      &kp F12    &kp UNDERSCORE       &kp PLUS    &kp LEFT_BRACE       &kp RIGHT_BRACE               &kp PIPE  &kp TILDE
                                         &trans      &trans    &kp SPACE           &kp RET         &trans            &trans
            >;
        };

        layer_3 {
            bindings = <
      &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4    &kp F1  &kp F2  &kp F3   &kp F4   &kp F5   &kp F6
&kp LEFT_CONTROL        &trans        &trans         &kt 0  &ext_power EP_TOG  &kp CAPSLOCK    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
      &kp LSHIFT        &trans        &trans        &trans             &trans        &trans    &trans  &trans  &trans   &trans   &trans   &trans
                                                    &trans             &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
